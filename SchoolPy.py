#
# CatOS-tiny based SchoolPy v. 1.0.0 
# 
# SchoolPy Main Script. CHANGE ONLY CONFIGURATION!
# –ë–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —à–∫–æ–ª—å–Ω—ã—Ö –±–µ—Å–µ–¥ v. 1.0.0
# (c) aGrIk Software.
# CatOS: (c) Catware Development. All rights reserved.

##############################################################
##############################################################
########CONFIGURATION#########################################
##############################################################
##############################################################

# –¢–æ–∫–µ–Ω - API-–∫–ª—é—á, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ -> –†–∞–±–æ—Ç–∞ —Å API"

token = "–¢–û–ö–ï–ù"

# gid - ID –≥—Ä—É–ø–ø—ã –±–æ—Ç–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏". –ü—Ä–æ—Å—Ç–æ —á–∏—Å–ª–æ –±–µ–∑ club.

gid = "ID –≥—Ä—É–ø–ø—ã"

# admins - —á–∏—Å–ª–æ–≤—ã–µ –∞–π–¥–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞, –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é. –ò–º–µ—é—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞.

admins = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è"

# moders - —á–∏—Å–ª–æ–≤—ã–µ –∞–π–¥–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞, –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é. –ò–º–µ—é—Ç –¥–æ—Å—Ç—É–ø –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π, –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –∫ –∫–æ–º–∞–Ω–¥–µ "alive?",
# –∫ –∫–æ–º–∞–Ω–¥–µ "freeze". –ï—Å–ª–∏ –º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞ –Ω–µ —Å–º–æ–∂–µ—Ç –Ω–∏–∫—Ç–æ, –∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–∞/–æ–≤ - –æ—Å—Ç–∞–≤—å—Ç–µ –ø–æ–ª–µ –ø—É—Å—Ç—ã–º.

moders = "–ú–æ–¥–µ—Ä–∞—Ü–∏—è"

# group_name - –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã, –≤ –∫–æ—Ç–æ—Ä–æ–π –ø–æ—è–≤–∏—Ç—Å—è –±–æ—Ç.

group_name = "–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã"

# mention - —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±–æ—Ç–∞ –¥–ª—è —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏. –ò–∑–º–µ–Ω–∏—Ç–µ –ª–∏—à—å –ö–û–†–û–¢–ö–û–ï –ò–ú–Ø –ì–†–£–ü–ü–´ –Ω–∞ –µ—ë –∫–æ—Ä–æ—Ç–∫–∏–π –∞–¥—Ä–µ—Å.

mention = "[club" + gid + "|@" + "–ö–û–†–û–¢–ö–û–ï –ò–ú–Ø –ì–†–£–ü–ü–´" + "] "

##############################################################
##############################################################
########CONFIGURATION#########################################
##############################################################
##############################################################



###############
# Definitions #
###############

def mainKeyboard():
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button("üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", color=VkKeyboardColor.POSITIVE)
    keyboard.add_button("üìù –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è", color=VkKeyboardColor.POSITIVE)
    keyboard.add_line()
    keyboard.add_button("üó£ –û–±—ä—è–≤–ª–µ–Ω–∏—è", color=VkKeyboardColor.PRIMARY)
    vk.messages.send(
    peer_id=peer_id,
    random_id=randd.randint(-2147483647, 2147483647),
    keyboard=keyboard.get_keyboard(),
    message="–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞.")

def clearKeyboard():
    vk.messages.send(
    peer_id=peer_id,
    random_id=randd.randint(-2147483647, 2147483647),
    keyboard='{"buttons":[],"one_time":true}',
    message="–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–±—Ä–∞–Ω–∞.")

def messagecust(message, peer_id):
    log("Issued messagecust() with parameters: {} {}. No output.".format(str(message), str(peer_id)))
    vk.messages.send(random_id=randd.randint(-2147483647, 2147483647),peer_id=peer_id, message=str(message), dont_parse_links=1)

def log(text):
    try:
        txt = "[ " + str("-".join(deunix(time.time()))) + " UTC ] [" + str(__name__) + "] [" + str(__file__) + "] " + text + "\n"
    except:
        txt = "[ " + str("-".join(deunix(time.time()))) + " UTC ] [" + str(__name__) + "] [" + str(__file__) + "] –ó–¥–µ—Å—å –º–æ–≥–ª–∞ –±—ã –±—ã—Ç—å –≤–∞—à–∞ —Ä–µ–∫–ª–∞–º–∞..." + "\n"
    PlusWrite(txt, "system.log")

def getid(sname):
    unamea = vk.users.get(user_ids=sname)
    log("Issued getid() with parameter {}. Output: {}".format(sname, str(unamea[0]['id'])))
    return unamea[0]['id']

def getmention(uid):
    unamee = vk.users.get(user_id=uid)[0]
    log("Issued getmention() with parameter {}. Output: {}".format(str(uid), "[id" + str(unamee["id"]) + "|" + unamee["first_name"] + " " + unamee["last_name"] + "]"))
    return "[id" + str(unamee["id"]) + "|" + unamee["first_name"] + " " + unamee["last_name"] + "]"

def deunix(integer):
    return datetime.datetime.utcfromtimestamp(integer).strftime('%Y %m %d %H %M %S').split(" ")

def getname(uid):
    unamee = vk.users.get(user_id=uid)[0]
    log("Issued getname() with parameter: {}. Output: {}".format(str(uid), str(unamee["first_name"] + " " + unamee["last_name"])))
    return unamee["first_name"] + " " + unamee["last_name"]

def succ():
    print("[ \033[92mok\033[0m ]")

def procmsg(text):
    rows, columns = os.popen('stty size', 'r').read().split()
    intm = int(columns) - 13 - len(text)
    txt = " " * intm
    print("\033[94m>>>\033[0m " + text + "..." + txt, end="")

def PlusWrite(text, target):
    file = open(str(target), 'a', encoding='utf-8')
    file.write(str(text))
    file.close()

def ReadFF(file): # Read From File
    try:
        log("Reading {}...".format(file))
        Ff = open(file, 'r', encoding='UTF-8')
        Contents = Ff.read()
        Ff.close()
        log("File content:\n=====================\n" + Contents + "\n=====================")
        return Contents
    except:
        log("File not found.")
        return None

def FailMsg(text): # FAIL message
    print("[ fail ] " + text)

def mta(text,noLinks=0):
    try:
        vk.messages.send(
            random_id=randd.randint(-2147483647, 2147483647),
            user_ids=admins,
            message=str(text)[:4000],
            dont_parse_links=1
            )
        log("Sended an message to admins: " + str(text))
    except Exception as e:
        FailMsg('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–∑–≤–∞—Ç—å MTA: ' + str(e))

def writeTo(text, target):
    file = open(str(target), 'w', encoding='utf-8')
    file.write(str(text))
    file.close()
    log("Wrote <" + str(text) + "> to " + target)

def message(text):
    text = str(text)
    try:
        if str(user_id) not in ReadFF("restricted.txt"):
            messagecust(str(text).replace("vto.pe", '').replace("vkbot.ru", '')[:4096], peer_id)
            log("Sent message: " + text + " Peer ID: " + str(peer_id))
        else:
            messagecust(str(text).replace("vto.pe", '').replace("vkbot.ru", '')[:4096], user_id)
            log("Sent message: " + text + " Peer ID: " + str(user_id))
    except Exception as e:
        print("–ù–∞—à–µ–ª —Å–≤–æ–π –ø–æ–∫–æ–π –≤ message: ", e)

import time
import datetime
###############
# Definitions #
###############

log("SchoolPy v. 1.0.0 is starting. Definitions was defined right now.")

#
# Modules
#

import os
procmsg("–ó–∞–≥—Ä—É–∑–∫–∞ datetime")
import datetime
succ()
procmsg("–ó–∞–≥—Ä—É–∑–∫–∞ json")
import json
succ()
procmsg("–ó–∞–≥—Ä—É–∑–∫–∞ numpy")
import numpy as np
succ()
procmsg("–ó–∞–≥—Ä—É–∑–∫–∞ random")
import random as randd
from random import random
succ()
procmsg("–ó–∞–≥—Ä—É–∑–∫–∞ traceback")
import traceback
succ()
procmsg("–ó–∞–≥—Ä—É–∑–∫–∞ shutil")
import shutil
succ()
procmsg("–ó–∞–≥—Ä—É–∑–∫–∞ vk_api")
import vk_api
import vk_api as api2
from vk_api import VkApi
from vk_api import VkUpload
succ()
procmsg("–ó–∞–≥—Ä—É–∑–∫–∞ time")
import time
succ()
procmsg("–ó–∞–≥—Ä—É–∑–∫–∞ vk_api [–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏]")
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
succ()
procmsg("–ó–∞–≥—Ä—É–∑–∫–∞ sys")
import sys
succ()

procmsg("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
vk_session = VkApi(token=token)
longpoll = VkBotLongPoll(vk_session, gid)
vk = vk_session.get_api()
succ()

procmsg('–§–∏–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞.')
try:
    vk.groups.enableOnline(group_id=gid)
except:
    pass
if not os.path.exists("restricted.txt"): writeTo("", "restricted.txt")
if not os.path.exists("schedule.txt"): writeTo("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.", "schedule.txt")
if not os.path.exists("hometasks.txt"): writeTo("–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.", "hometasks.txt")
if not os.path.exists("hometasks.txt"): writeTo("–û–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.", "hometasks.txt")
mta("–ó–∞–ø—É—Å–∫–∞—é —è–¥—Ä–æ...")
succ()

log("SchoolPy v. 1.0.0 started.")
print("SchoolPy v. 1.0.0 –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é. ")

#
# –¶–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π LongPoll
#
while True:
    try:
        for event in longpoll.listen():
            log("New event: " + str(event.type))
            if event.type == VkBotEventType.MESSAGE_NEW or event.type == VkBotEventType.MESSAGE_EDIT:
                # –†–∞—Å–∫–∏–¥—ã–≤–∞–Ω–∏–µ –ø–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º
                obj = event.object['message'] #–ì–ª–∞–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                user_id = str(obj['from_id']) #ID –∞–≤—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                peer_id = str(obj['peer_id']) #ID –±–µ—Å–µ–¥—ã, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
                text = str(obj['text'].replace(mention, "").replace("[club" + gid + "|" + group_name + "] ", "")) #–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                attachments = list(obj['attachments']) #–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
                print("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ", getname(user_id), " (", str(user_id), ") –≤ —á–∞—Ç–µ ", peer_id, ", –≤–ª–æ–∂–µ–Ω–∏–π: ", str(len(attachments)), ", —Ç–µ–∫—Å—Ç: ", text)
                log("Message from " + getname(user_id) + " (" + str(user_id) + ") in chat " + peer_id + " + attachments: " + str(len(attachments)) + " + text: " + text)

                if text == "üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
                    log("Executed üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
                    message(ReadFF("schedule.txt"))

                if text == "üìù –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è":
                    log("Executed üìù –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è")
                    message(ReadFF("hometasks.txt"))

                if text == "üó£ –û–±—ä—è–≤–ª–µ–Ω–∏—è":
                    log("Executed üó£ –û–±—ä—è–≤–ª–µ–Ω–∏—è")
                    message(ReadFF("alerts.txt"))

                # –ê–¥–º–∏–Ω—Å–∫–æ–µ
                if str(user_id) in admins:
                    #exec
                    if text.startswith("exec") or text.startswith("/exec"):
                        try:
                            log("Executed exec, parameter: " + ' '.join(text.split(' ')[1:]))
                            exec(' '.join(text.split(' ')[1:]))
                            message("ok")
                        except:
                            exc_type, exc_value, exc_tb = sys.exc_info()
                            log('Error: ' + str("\n".join(traceback.format_exception(exc_type, exc_value, exc_tb))))
                            message('Error: ' + str("\n".join(traceback.format_exception(exc_type, exc_value, exc_tb))))

                #–ú–æ–¥–µ—Ä—Å–∫–æ–µ
                if str(user_id) in moders or str(user_id) in admins:
                    #setschedule
                    if text.startswith("setschedule"):
                        writeTo(text.replace("setschedule ", ""), "schedule.txt")
                        log("Changed schedule to " + text.replace("setschedule ", ""))
                        message("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.")

                    #sethometasks
                    if text.startswith("sethometasks"):
                        writeTo(text.replace("sethometasks ", ""), "hometasks.txt")
                        log("Changed hometasks to " + text.replace("sethometasks ", ""))
                        message("–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.")

                    #setalerts
                    if text.startswith("setalerts"):
                        writeTo(text.replace("setalerts ", ""), "alerts.txt")
                        log("Changed alerts to " + text.replace("setalerts ", ""))
                        message("–û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.")

                    #freeze
                    if text.startswith("freeze"):
                        target = getid(text.replace("freeze ", ""))
                        if str(target) not in ReadFF("restricted.txt"):
                            PlusWrite(str(target) + "\n", "restricted.txt")
                            log("Freezed " + str(target) + " (" + getname(target) + ")")
                            message(getmention(target) + " —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–≤–æ–∏ –∫–æ–º–∞–Ω–¥—ã –≤ –ª–∏—á–∫—É —Å –±–æ—Ç–æ–º.")
                        else:
                            writeTo(ReadFF("restricted.txt").replace(str(target) + "\n", ""), "restricted.txt")
                            log("Unfreezed " + str(target) + " (" + getname(target) + ")")
                            message(getmention(target) + " —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–≤–æ–∏ –∫–æ–º–∞–Ω–¥—ã –∫–∞–∫ –æ–±—ã—á–Ω–æ.")

                    #alive
                    if text == "alive?":
                        log("Checked alive")
                        message("–Ø –≤—Å—ë –µ—â—ë –∂–∏–≤, –≤–æ—Ç –ø—Ä–∏–∫–æ–ª?")

            if event.type == VkBotEventType.MESSAGE_ALLOW:
                peer_id = str(obj['peer_id']) #ID –±–µ—Å–µ–¥—ã, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
                mainKeyboard()

    except Exception as e:
        try:
            print('–ü–∞–Ω–∏–∫–∞ —è–¥—Ä–∞: ' + str(e))
            if str(user_id) in admins:
                #exc_type, exc_value, exc_tb = sys.exc_info()
                message('Error: ' + e.__traceback__)
                log('Error: ' + e.__traceback__)
            else:
                #exc_type, exc_value, exc_tb = sys.exc_info()
                mta("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã \"" + text + "\" —Å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏—è–º–∏ " + attachments + ", –≤—ã–∑–≤–∞–Ω–Ω–æ–π " + getmention(user_id) + " –≤ " + peer_id + "\n\n" + e.__traceback__)
                log('Error: ' + e.__traceback__)
                message("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –±–æ—Ç–∞ —É–∂–µ –∏–∑–≤–µ—â–µ–Ω–∞ –æ –ø—Ä–æ–±–ª–µ–º–µ.")
        except:
            log("Can't handle exception, skipping...")